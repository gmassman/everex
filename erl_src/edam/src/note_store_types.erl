%%
%% Autogenerated by Thrift Compiler (1.0.0-dev)
%%
%% DO NOT EDIT UNLESS YOU ARE SURE THAT YOU KNOW WHAT YOU ARE DOING
%%

-module(note_store_types).

-include("note_store_types.hrl").

-export([struct_info/1, struct_info_ext/1]).

struct_info('SyncState') ->
  {struct, [{1, i64},
          {2, i64},
          {3, i32},
          {4, i64}]}
;

struct_info('SyncChunk') ->
  {struct, [{1, i64},
          {2, i32},
          {3, i32},
          {4, {list, {struct, {'types_types', 'Note'}}}},
          {5, {list, {struct, {'types_types', 'Notebook'}}}},
          {6, {list, {struct, {'types_types', 'Tag'}}}},
          {7, {list, {struct, {'types_types', 'SavedSearch'}}}},
          {8, {list, {struct, {'types_types', 'Resource'}}}},
          {9, {list, string}},
          {10, {list, string}},
          {11, {list, string}},
          {12, {list, string}},
          {13, {list, {struct, {'types_types', 'LinkedNotebook'}}}},
          {14, {list, string}}]}
;

struct_info('SyncChunkFilter') ->
  {struct, [{1, bool},
          {2, bool},
          {3, bool},
          {4, bool},
          {5, bool},
          {6, bool},
          {7, bool},
          {8, bool},
          {9, bool},
          {10, bool},
          {12, bool},
          {13, bool},
          {11, string}]}
;

struct_info('NoteFilter') ->
  {struct, [{1, i32},
          {2, bool},
          {3, string},
          {4, string},
          {5, {list, string}},
          {6, string},
          {7, bool},
          {8, string}]}
;

struct_info('NoteList') ->
  {struct, [{1, i32},
          {2, i32},
          {3, {list, {struct, {'types_types', 'Note'}}}},
          {4, {list, string}},
          {5, {list, string}},
          {6, i32}]}
;

struct_info('NoteMetadata') ->
  {struct, [{1, string},
          {2, string},
          {5, i32},
          {6, i64},
          {7, i64},
          {8, i64},
          {10, i32},
          {11, string},
          {12, {list, string}},
          {14, {struct, {'types_types', 'NoteAttributes'}}},
          {20, string},
          {21, i32}]}
;

struct_info('NotesMetadataList') ->
  {struct, [{1, i32},
          {2, i32},
          {3, {list, {struct, {'note_store_types', 'NoteMetadata'}}}},
          {4, {list, string}},
          {5, {list, string}},
          {6, i32}]}
;

struct_info('NotesMetadataResultSpec') ->
  {struct, [{2, bool},
          {5, bool},
          {6, bool},
          {7, bool},
          {8, bool},
          {10, bool},
          {11, bool},
          {12, bool},
          {14, bool},
          {20, bool},
          {21, bool}]}
;

struct_info('NoteCollectionCounts') ->
  {struct, [{1, {map, string, i32}},
          {2, {map, string, i32}},
          {3, i32}]}
;

struct_info('NoteEmailParameters') ->
  {struct, [{1, string},
          {2, {struct, {'types_types', 'Note'}}},
          {3, {list, string}},
          {4, {list, string}},
          {5, string},
          {6, string}]}
;

struct_info('NoteVersionId') ->
  {struct, [{1, i32},
          {2, i64},
          {3, i64},
          {4, string}]}
;

struct_info('ClientUsageMetrics') ->
  {struct, [{1, i32}]}
;

struct_info('RelatedQuery') ->
  {struct, [{1, string},
          {2, string},
          {3, {struct, {'note_store_types', 'NoteFilter'}}},
          {4, string}]}
;

struct_info('RelatedResult') ->
  {struct, [{1, {list, {struct, {'types_types', 'Note'}}}},
          {2, {list, {struct, {'types_types', 'Notebook'}}}},
          {3, {list, {struct, {'types_types', 'Tag'}}}},
          {4, {list, {struct, {'types_types', 'NotebookDescriptor'}}}}]}
;

struct_info('RelatedResultSpec') ->
  {struct, [{1, i32},
          {2, i32},
          {3, i32},
          {4, bool},
          {5, bool}]}
;

struct_info(_) -> erlang:error(function_clause).

struct_info_ext('SyncState') ->
  {struct, [{1, required, i64, 'currentTime', undefined},
          {2, required, i64, 'fullSyncBefore', undefined},
          {3, required, i32, 'updateCount', undefined},
          {4, optional, i64, 'uploaded', undefined}]}
;

struct_info_ext('SyncChunk') ->
  {struct, [{1, required, i64, 'currentTime', undefined},
          {2, optional, i32, 'chunkHighUSN', undefined},
          {3, required, i32, 'updateCount', undefined},
          {4, optional, {list, {struct, {'types_types', 'Note'}}}, 'notes', []},
          {5, optional, {list, {struct, {'types_types', 'Notebook'}}}, 'notebooks', []},
          {6, optional, {list, {struct, {'types_types', 'Tag'}}}, 'tags', []},
          {7, optional, {list, {struct, {'types_types', 'SavedSearch'}}}, 'searches', []},
          {8, optional, {list, {struct, {'types_types', 'Resource'}}}, 'resources', []},
          {9, optional, {list, string}, 'expungedNotes', []},
          {10, optional, {list, string}, 'expungedNotebooks', []},
          {11, optional, {list, string}, 'expungedTags', []},
          {12, optional, {list, string}, 'expungedSearches', []},
          {13, optional, {list, {struct, {'types_types', 'LinkedNotebook'}}}, 'linkedNotebooks', []},
          {14, optional, {list, string}, 'expungedLinkedNotebooks', []}]}
;

struct_info_ext('SyncChunkFilter') ->
  {struct, [{1, optional, bool, 'includeNotes', undefined},
          {2, optional, bool, 'includeNoteResources', undefined},
          {3, optional, bool, 'includeNoteAttributes', undefined},
          {4, optional, bool, 'includeNotebooks', undefined},
          {5, optional, bool, 'includeTags', undefined},
          {6, optional, bool, 'includeSearches', undefined},
          {7, optional, bool, 'includeResources', undefined},
          {8, optional, bool, 'includeLinkedNotebooks', undefined},
          {9, optional, bool, 'includeExpunged', undefined},
          {10, optional, bool, 'includeNoteApplicationDataFullMap', undefined},
          {12, optional, bool, 'includeResourceApplicationDataFullMap', undefined},
          {13, optional, bool, 'includeNoteResourceApplicationDataFullMap', undefined},
          {11, optional, string, 'requireNoteContentClass', undefined}]}
;

struct_info_ext('NoteFilter') ->
  {struct, [{1, optional, i32, 'order', undefined},
          {2, optional, bool, 'ascending', undefined},
          {3, optional, string, 'words', undefined},
          {4, optional, string, 'notebookGuid', undefined},
          {5, optional, {list, string}, 'tagGuids', []},
          {6, optional, string, 'timeZone', undefined},
          {7, optional, bool, 'inactive', undefined},
          {8, optional, string, 'emphasized', undefined}]}
;

struct_info_ext('NoteList') ->
  {struct, [{1, required, i32, 'startIndex', undefined},
          {2, required, i32, 'totalNotes', undefined},
          {3, required, {list, {struct, {'types_types', 'Note'}}}, 'notes', []},
          {4, optional, {list, string}, 'stoppedWords', []},
          {5, optional, {list, string}, 'searchedWords', []},
          {6, optional, i32, 'updateCount', undefined}]}
;

struct_info_ext('NoteMetadata') ->
  {struct, [{1, required, string, 'guid', undefined},
          {2, optional, string, 'title', undefined},
          {5, optional, i32, 'contentLength', undefined},
          {6, optional, i64, 'created', undefined},
          {7, optional, i64, 'updated', undefined},
          {8, optional, i64, 'deleted', undefined},
          {10, optional, i32, 'updateSequenceNum', undefined},
          {11, optional, string, 'notebookGuid', undefined},
          {12, optional, {list, string}, 'tagGuids', []},
          {14, optional, {struct, {'types_types', 'NoteAttributes'}}, 'attributes', #'NoteAttributes'{}},
          {20, optional, string, 'largestResourceMime', undefined},
          {21, optional, i32, 'largestResourceSize', undefined}]}
;

struct_info_ext('NotesMetadataList') ->
  {struct, [{1, required, i32, 'startIndex', undefined},
          {2, required, i32, 'totalNotes', undefined},
          {3, required, {list, {struct, {'note_store_types', 'NoteMetadata'}}}, 'notes', []},
          {4, optional, {list, string}, 'stoppedWords', []},
          {5, optional, {list, string}, 'searchedWords', []},
          {6, optional, i32, 'updateCount', undefined}]}
;

struct_info_ext('NotesMetadataResultSpec') ->
  {struct, [{2, optional, bool, 'includeTitle', undefined},
          {5, optional, bool, 'includeContentLength', undefined},
          {6, optional, bool, 'includeCreated', undefined},
          {7, optional, bool, 'includeUpdated', undefined},
          {8, optional, bool, 'includeDeleted', undefined},
          {10, optional, bool, 'includeUpdateSequenceNum', undefined},
          {11, optional, bool, 'includeNotebookGuid', undefined},
          {12, optional, bool, 'includeTagGuids', undefined},
          {14, optional, bool, 'includeAttributes', undefined},
          {20, optional, bool, 'includeLargestResourceMime', undefined},
          {21, optional, bool, 'includeLargestResourceSize', undefined}]}
;

struct_info_ext('NoteCollectionCounts') ->
  {struct, [{1, optional, {map, string, i32}, 'notebookCounts', dict:new()},
          {2, optional, {map, string, i32}, 'tagCounts', dict:new()},
          {3, optional, i32, 'trashCount', undefined}]}
;

struct_info_ext('NoteEmailParameters') ->
  {struct, [{1, optional, string, 'guid', undefined},
          {2, optional, {struct, {'types_types', 'Note'}}, 'note', #'Note'{}},
          {3, optional, {list, string}, 'toAddresses', []},
          {4, optional, {list, string}, 'ccAddresses', []},
          {5, optional, string, 'subject', undefined},
          {6, optional, string, 'message', undefined}]}
;

struct_info_ext('NoteVersionId') ->
  {struct, [{1, required, i32, 'updateSequenceNum', undefined},
          {2, required, i64, 'updated', undefined},
          {3, required, i64, 'saved', undefined},
          {4, required, string, 'title', undefined}]}
;

struct_info_ext('ClientUsageMetrics') ->
  {struct, [{1, optional, i32, 'sessions', undefined}]}
;

struct_info_ext('RelatedQuery') ->
  {struct, [{1, optional, string, 'noteGuid', undefined},
          {2, optional, string, 'plainText', undefined},
          {3, optional, {struct, {'note_store_types', 'NoteFilter'}}, 'filter', #'NoteFilter'{}},
          {4, optional, string, 'referenceUri', undefined}]}
;

struct_info_ext('RelatedResult') ->
  {struct, [{1, optional, {list, {struct, {'types_types', 'Note'}}}, 'notes', []},
          {2, optional, {list, {struct, {'types_types', 'Notebook'}}}, 'notebooks', []},
          {3, optional, {list, {struct, {'types_types', 'Tag'}}}, 'tags', []},
          {4, optional, {list, {struct, {'types_types', 'NotebookDescriptor'}}}, 'containingNotebooks', []}]}
;

struct_info_ext('RelatedResultSpec') ->
  {struct, [{1, optional, i32, 'maxNotes', undefined},
          {2, optional, i32, 'maxNotebooks', undefined},
          {3, optional, i32, 'maxTags', undefined},
          {4, optional, bool, 'writableNotebooksOnly', undefined},
          {5, optional, bool, 'includeContainingNotebooks', undefined}]}
;

struct_info_ext(_) -> erlang:error(function_clause).

