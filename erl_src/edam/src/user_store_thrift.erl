%%
%% Autogenerated by Thrift Compiler (1.0.0-dev)
%%
%% DO NOT EDIT UNLESS YOU ARE SURE THAT YOU KNOW WHAT YOU ARE DOING
%%

-module(user_store_thrift).
-behaviour(thrift_service).


-include("user_store_thrift.hrl").

-export([struct_info/1, function_info/2]).

struct_info(_) -> erlang:error(function_clause).
%%% interface
% checkVersion(This, ClientName, EdamVersionMajor, EdamVersionMinor)
function_info('checkVersion', params_type) ->
  {struct, [{1, string},
          {2, i16},
          {3, i16}]}
;
function_info('checkVersion', reply_type) ->
  bool;
function_info('checkVersion', exceptions) ->
  {struct, []}
;
% getBootstrapInfo(This, Locale)
function_info('getBootstrapInfo', params_type) ->
  {struct, [{1, string}]}
;
function_info('getBootstrapInfo', reply_type) ->
  {struct, {'user_store_types', 'BootstrapInfo'}};
function_info('getBootstrapInfo', exceptions) ->
  {struct, []}
;
% authenticate(This, Username, Password, ConsumerKey, ConsumerSecret, SupportsTwoFactor)
function_info('authenticate', params_type) ->
  {struct, [{1, string},
          {2, string},
          {3, string},
          {4, string},
          {5, bool}]}
;
function_info('authenticate', reply_type) ->
  {struct, {'user_store_types', 'AuthenticationResult'}};
function_info('authenticate', exceptions) ->
  {struct, [{1, {struct, {'errors_types', 'EDAMUserException'}}},
          {2, {struct, {'errors_types', 'EDAMSystemException'}}}]}
;
% authenticateLongSession(This, Username, Password, ConsumerKey, ConsumerSecret, DeviceIdentifier, DeviceDescription, SupportsTwoFactor)
function_info('authenticateLongSession', params_type) ->
  {struct, [{1, string},
          {2, string},
          {3, string},
          {4, string},
          {5, string},
          {6, string},
          {7, bool}]}
;
function_info('authenticateLongSession', reply_type) ->
  {struct, {'user_store_types', 'AuthenticationResult'}};
function_info('authenticateLongSession', exceptions) ->
  {struct, [{1, {struct, {'errors_types', 'EDAMUserException'}}},
          {2, {struct, {'errors_types', 'EDAMSystemException'}}}]}
;
% completeTwoFactorAuthentication(This, AuthenticationToken, OneTimeCode, DeviceIdentifier, DeviceDescription)
function_info('completeTwoFactorAuthentication', params_type) ->
  {struct, [{1, string},
          {2, string},
          {3, string},
          {4, string}]}
;
function_info('completeTwoFactorAuthentication', reply_type) ->
  {struct, {'user_store_types', 'AuthenticationResult'}};
function_info('completeTwoFactorAuthentication', exceptions) ->
  {struct, [{1, {struct, {'errors_types', 'EDAMUserException'}}},
          {2, {struct, {'errors_types', 'EDAMSystemException'}}}]}
;
% revokeLongSession(This, AuthenticationToken)
function_info('revokeLongSession', params_type) ->
  {struct, [{1, string}]}
;
function_info('revokeLongSession', reply_type) ->
  {struct, []};
function_info('revokeLongSession', exceptions) ->
  {struct, [{1, {struct, {'errors_types', 'EDAMUserException'}}},
          {2, {struct, {'errors_types', 'EDAMSystemException'}}}]}
;
% authenticateToBusiness(This, AuthenticationToken)
function_info('authenticateToBusiness', params_type) ->
  {struct, [{1, string}]}
;
function_info('authenticateToBusiness', reply_type) ->
  {struct, {'user_store_types', 'AuthenticationResult'}};
function_info('authenticateToBusiness', exceptions) ->
  {struct, [{1, {struct, {'errors_types', 'EDAMUserException'}}},
          {2, {struct, {'errors_types', 'EDAMSystemException'}}}]}
;
% refreshAuthentication(This, AuthenticationToken)
function_info('refreshAuthentication', params_type) ->
  {struct, [{1, string}]}
;
function_info('refreshAuthentication', reply_type) ->
  {struct, {'user_store_types', 'AuthenticationResult'}};
function_info('refreshAuthentication', exceptions) ->
  {struct, [{1, {struct, {'errors_types', 'EDAMUserException'}}},
          {2, {struct, {'errors_types', 'EDAMSystemException'}}}]}
;
% getUser(This, AuthenticationToken)
function_info('getUser', params_type) ->
  {struct, [{1, string}]}
;
function_info('getUser', reply_type) ->
  {struct, {'types_types', 'User'}};
function_info('getUser', exceptions) ->
  {struct, [{1, {struct, {'errors_types', 'EDAMUserException'}}},
          {2, {struct, {'errors_types', 'EDAMSystemException'}}}]}
;
% getPublicUserInfo(This, Username)
function_info('getPublicUserInfo', params_type) ->
  {struct, [{1, string}]}
;
function_info('getPublicUserInfo', reply_type) ->
  {struct, {'user_store_types', 'PublicUserInfo'}};
function_info('getPublicUserInfo', exceptions) ->
  {struct, [{1, {struct, {'errors_types', 'EDAMNotFoundException'}}},
          {2, {struct, {'errors_types', 'EDAMSystemException'}}},
          {3, {struct, {'errors_types', 'EDAMUserException'}}}]}
;
% getPremiumInfo(This, AuthenticationToken)
function_info('getPremiumInfo', params_type) ->
  {struct, [{1, string}]}
;
function_info('getPremiumInfo', reply_type) ->
  {struct, {'types_types', 'PremiumInfo'}};
function_info('getPremiumInfo', exceptions) ->
  {struct, [{1, {struct, {'errors_types', 'EDAMUserException'}}},
          {2, {struct, {'errors_types', 'EDAMSystemException'}}}]}
;
% getNoteStoreUrl(This, AuthenticationToken)
function_info('getNoteStoreUrl', params_type) ->
  {struct, [{1, string}]}
;
function_info('getNoteStoreUrl', reply_type) ->
  string;
function_info('getNoteStoreUrl', exceptions) ->
  {struct, [{1, {struct, {'errors_types', 'EDAMUserException'}}},
          {2, {struct, {'errors_types', 'EDAMSystemException'}}}]}
;
function_info(_Func, _Info) -> erlang:error(function_clause).

