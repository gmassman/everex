%%
%% Autogenerated by Thrift Compiler (0.14.0)
%%
%% DO NOT EDIT UNLESS YOU ARE SURE THAT YOU KNOW WHAT YOU ARE DOING
%%

-ifndef(_note_store_types_included).
-define(_note_store_types_included, yeah).
-include("user_store_types.hrl").
-include("types_types.hrl").
-include("errors_types.hrl").
-include("limits_types.hrl").


-define(NOTE_STORE_SHARERELATIONSHIPPRIVILEGELEVEL_READ_NOTEBOOK, 0).
-define(NOTE_STORE_SHARERELATIONSHIPPRIVILEGELEVEL_READ_NOTEBOOK_PLUS_ACTIVITY, 10).
-define(NOTE_STORE_SHARERELATIONSHIPPRIVILEGELEVEL_MODIFY_NOTEBOOK_PLUS_ACTIVITY, 20).
-define(NOTE_STORE_SHARERELATIONSHIPPRIVILEGELEVEL_FULL_ACCESS, 30).

%% struct 'SyncState'

-record('SyncState', {'currentTime' :: integer(),
                      'fullSyncBefore' :: integer(),
                      'updateCount' :: integer(),
                      'uploaded' :: integer() | 'undefined',
                      'userLastUpdated' :: integer() | 'undefined',
                      'userMaxMessageEventId' :: integer() | 'undefined'}).
-type 'SyncState'() :: #'SyncState'{}.

%% struct 'SyncChunk'

-record('SyncChunk', {'currentTime' :: integer(),
                      'chunkHighUSN' :: integer() | 'undefined',
                      'updateCount' :: integer(),
                      'notes' :: list() | 'undefined',
                      'notebooks' :: list() | 'undefined',
                      'tags' :: list() | 'undefined',
                      'searches' :: list() | 'undefined',
                      'resources' :: list() | 'undefined',
                      'expungedNotes' :: list() | 'undefined',
                      'expungedNotebooks' :: list() | 'undefined',
                      'expungedTags' :: list() | 'undefined',
                      'expungedSearches' :: list() | 'undefined',
                      'linkedNotebooks' :: list() | 'undefined',
                      'expungedLinkedNotebooks' :: list() | 'undefined'}).
-type 'SyncChunk'() :: #'SyncChunk'{}.

%% struct 'SyncChunkFilter'

-record('SyncChunkFilter', {'includeNotes' :: boolean() | 'undefined',
                            'includeNoteResources' :: boolean() | 'undefined',
                            'includeNoteAttributes' :: boolean() | 'undefined',
                            'includeNotebooks' :: boolean() | 'undefined',
                            'includeTags' :: boolean() | 'undefined',
                            'includeSearches' :: boolean() | 'undefined',
                            'includeResources' :: boolean() | 'undefined',
                            'includeLinkedNotebooks' :: boolean() | 'undefined',
                            'includeExpunged' :: boolean() | 'undefined',
                            'includeNoteApplicationDataFullMap' :: boolean() | 'undefined',
                            'includeResourceApplicationDataFullMap' :: boolean() | 'undefined',
                            'includeNoteResourceApplicationDataFullMap' :: boolean() | 'undefined',
                            'includeSharedNotes' :: boolean() | 'undefined',
                            'omitSharedNotebooks' :: boolean() | 'undefined',
                            'requireNoteContentClass' :: string() | binary() | 'undefined',
                            'notebookGuids' :: sets:set() | 'undefined'}).
-type 'SyncChunkFilter'() :: #'SyncChunkFilter'{}.

%% struct 'NoteFilter'

-record('NoteFilter', {'order' :: integer() | 'undefined',
                       'ascending' :: boolean() | 'undefined',
                       'words' :: string() | binary() | 'undefined',
                       'notebookGuid' :: string() | binary() | 'undefined',
                       'tagGuids' :: list() | 'undefined',
                       'timeZone' :: string() | binary() | 'undefined',
                       'inactive' :: boolean() | 'undefined',
                       'emphasized' :: string() | binary() | 'undefined',
                       'includeAllReadableNotebooks' :: boolean() | 'undefined',
                       'includeAllReadableWorkspaces' :: boolean() | 'undefined',
                       'context' :: string() | binary() | 'undefined',
                       'rawWords' :: string() | binary() | 'undefined',
                       'searchContextBytes' :: string() | binary() | 'undefined'}).
-type 'NoteFilter'() :: #'NoteFilter'{}.

%% struct 'NoteList'

-record('NoteList', {'startIndex' :: integer(),
                     'totalNotes' :: integer(),
                     'notes' = [] :: list(),
                     'stoppedWords' :: list() | 'undefined',
                     'searchedWords' :: list() | 'undefined',
                     'updateCount' :: integer() | 'undefined',
                     'searchContextBytes' :: string() | binary() | 'undefined',
                     'debugInfo' :: string() | binary() | 'undefined'}).
-type 'NoteList'() :: #'NoteList'{}.

%% struct 'NoteMetadata'

-record('NoteMetadata', {'guid' :: string() | binary(),
                         'title' :: string() | binary() | 'undefined',
                         'contentLength' :: integer() | 'undefined',
                         'created' :: integer() | 'undefined',
                         'updated' :: integer() | 'undefined',
                         'deleted' :: integer() | 'undefined',
                         'updateSequenceNum' :: integer() | 'undefined',
                         'notebookGuid' :: string() | binary() | 'undefined',
                         'tagGuids' :: list() | 'undefined',
                         'attributes' :: 'NoteAttributes'() | 'undefined',
                         'largestResourceMime' :: string() | binary() | 'undefined',
                         'largestResourceSize' :: integer() | 'undefined'}).
-type 'NoteMetadata'() :: #'NoteMetadata'{}.

%% struct 'NotesMetadataList'

-record('NotesMetadataList', {'startIndex' :: integer(),
                              'totalNotes' :: integer(),
                              'notes' = [] :: list(),
                              'stoppedWords' :: list() | 'undefined',
                              'searchedWords' :: list() | 'undefined',
                              'updateCount' :: integer() | 'undefined',
                              'searchContextBytes' :: string() | binary() | 'undefined',
                              'debugInfo' :: string() | binary() | 'undefined'}).
-type 'NotesMetadataList'() :: #'NotesMetadataList'{}.

%% struct 'NotesMetadataResultSpec'

-record('NotesMetadataResultSpec', {'includeTitle' :: boolean() | 'undefined',
                                    'includeContentLength' :: boolean() | 'undefined',
                                    'includeCreated' :: boolean() | 'undefined',
                                    'includeUpdated' :: boolean() | 'undefined',
                                    'includeDeleted' :: boolean() | 'undefined',
                                    'includeUpdateSequenceNum' :: boolean() | 'undefined',
                                    'includeNotebookGuid' :: boolean() | 'undefined',
                                    'includeTagGuids' :: boolean() | 'undefined',
                                    'includeAttributes' :: boolean() | 'undefined',
                                    'includeLargestResourceMime' :: boolean() | 'undefined',
                                    'includeLargestResourceSize' :: boolean() | 'undefined'}).
-type 'NotesMetadataResultSpec'() :: #'NotesMetadataResultSpec'{}.

%% struct 'NoteCollectionCounts'

-record('NoteCollectionCounts', {'notebookCounts' :: dict:dict() | 'undefined',
                                 'tagCounts' :: dict:dict() | 'undefined',
                                 'trashCount' :: integer() | 'undefined'}).
-type 'NoteCollectionCounts'() :: #'NoteCollectionCounts'{}.

%% struct 'NoteResultSpec'

-record('NoteResultSpec', {'includeContent' :: boolean() | 'undefined',
                           'includeResourcesData' :: boolean() | 'undefined',
                           'includeResourcesRecognition' :: boolean() | 'undefined',
                           'includeResourcesAlternateData' :: boolean() | 'undefined',
                           'includeSharedNotes' :: boolean() | 'undefined',
                           'includeNoteAppDataValues' :: boolean() | 'undefined',
                           'includeResourceAppDataValues' :: boolean() | 'undefined',
                           'includeAccountLimits' :: boolean() | 'undefined'}).
-type 'NoteResultSpec'() :: #'NoteResultSpec'{}.

%% struct 'NoteEmailParameters'

-record('NoteEmailParameters', {'guid' :: string() | binary() | 'undefined',
                                'note' :: 'Note'() | 'undefined',
                                'toAddresses' :: list() | 'undefined',
                                'ccAddresses' :: list() | 'undefined',
                                'subject' :: string() | binary() | 'undefined',
                                'message' :: string() | binary() | 'undefined'}).
-type 'NoteEmailParameters'() :: #'NoteEmailParameters'{}.

%% struct 'NoteVersionId'

-record('NoteVersionId', {'updateSequenceNum' :: integer(),
                          'updated' :: integer(),
                          'saved' :: integer(),
                          'title' :: string() | binary(),
                          'lastEditorId' :: integer() | 'undefined'}).
-type 'NoteVersionId'() :: #'NoteVersionId'{}.

%% struct 'RelatedQuery'

-record('RelatedQuery', {'noteGuid' :: string() | binary() | 'undefined',
                         'plainText' :: string() | binary() | 'undefined',
                         'filter' :: 'NoteFilter'() | 'undefined',
                         'referenceUri' :: string() | binary() | 'undefined',
                         'context' :: string() | binary() | 'undefined',
                         'cacheKey' :: string() | binary() | 'undefined'}).
-type 'RelatedQuery'() :: #'RelatedQuery'{}.

%% struct 'RelatedResult'

-record('RelatedResult', {'notes' :: list() | 'undefined',
                          'notebooks' :: list() | 'undefined',
                          'tags' :: list() | 'undefined',
                          'containingNotebooks' :: list() | 'undefined',
                          'debugInfo' :: string() | binary() | 'undefined',
                          'experts' :: list() | 'undefined',
                          'relatedContent' :: list() | 'undefined',
                          'cacheKey' :: string() | binary() | 'undefined',
                          'cacheExpires' :: integer() | 'undefined'}).
-type 'RelatedResult'() :: #'RelatedResult'{}.

%% struct 'RelatedResultSpec'

-record('RelatedResultSpec', {'maxNotes' :: integer() | 'undefined',
                              'maxNotebooks' :: integer() | 'undefined',
                              'maxTags' :: integer() | 'undefined',
                              'writableNotebooksOnly' :: boolean() | 'undefined',
                              'includeContainingNotebooks' :: boolean() | 'undefined',
                              'includeDebugInfo' :: boolean() | 'undefined',
                              'maxExperts' :: integer() | 'undefined',
                              'maxRelatedContent' :: integer() | 'undefined',
                              'relatedContentTypes' :: sets:set() | 'undefined'}).
-type 'RelatedResultSpec'() :: #'RelatedResultSpec'{}.

%% struct 'UpdateNoteIfUsnMatchesResult'

-record('UpdateNoteIfUsnMatchesResult', {'note' :: 'Note'() | 'undefined',
                                         'updated' :: boolean() | 'undefined'}).
-type 'UpdateNoteIfUsnMatchesResult'() :: #'UpdateNoteIfUsnMatchesResult'{}.

%% struct 'ShareRelationshipRestrictions'

-record('ShareRelationshipRestrictions', {'noSetReadOnly' :: boolean() | 'undefined',
                                          'noSetReadPlusActivity' :: boolean() | 'undefined',
                                          'noSetModify' :: boolean() | 'undefined',
                                          'noSetFullAccess' :: boolean() | 'undefined'}).
-type 'ShareRelationshipRestrictions'() :: #'ShareRelationshipRestrictions'{}.

%% struct 'InvitationShareRelationship'

-record('InvitationShareRelationship', {'displayName' :: string() | binary() | 'undefined',
                                        'recipientUserIdentity' :: 'UserIdentity'() | 'undefined',
                                        'privilege' :: integer() | 'undefined',
                                        'sharerUserId' :: integer() | 'undefined'}).
-type 'InvitationShareRelationship'() :: #'InvitationShareRelationship'{}.

%% struct 'MemberShareRelationship'

-record('MemberShareRelationship', {'displayName' :: string() | binary() | 'undefined',
                                    'recipientUserId' :: integer() | 'undefined',
                                    'bestPrivilege' :: integer() | 'undefined',
                                    'individualPrivilege' :: integer() | 'undefined',
                                    'restrictions' :: 'ShareRelationshipRestrictions'() | 'undefined',
                                    'sharerUserId' :: integer() | 'undefined'}).
-type 'MemberShareRelationship'() :: #'MemberShareRelationship'{}.

%% struct 'ShareRelationships'

-record('ShareRelationships', {'invitations' :: list() | 'undefined',
                               'memberships' :: list() | 'undefined',
                               'invitationRestrictions' :: 'ShareRelationshipRestrictions'() | 'undefined'}).
-type 'ShareRelationships'() :: #'ShareRelationships'{}.

%% struct 'ManageNotebookSharesParameters'

-record('ManageNotebookSharesParameters', {'notebookGuid' :: string() | binary() | 'undefined',
                                           'inviteMessage' :: string() | binary() | 'undefined',
                                           'membershipsToUpdate' :: list() | 'undefined',
                                           'invitationsToCreateOrUpdate' :: list() | 'undefined',
                                           'unshares' :: list() | 'undefined'}).
-type 'ManageNotebookSharesParameters'() :: #'ManageNotebookSharesParameters'{}.

%% struct 'ManageNotebookSharesError'

-record('ManageNotebookSharesError', {'userIdentity' :: 'UserIdentity'() | 'undefined',
                                      'userException' :: 'EDAMUserException'() | 'undefined',
                                      'notFoundException' :: 'EDAMNotFoundException'() | 'undefined'}).
-type 'ManageNotebookSharesError'() :: #'ManageNotebookSharesError'{}.

%% struct 'ManageNotebookSharesResult'

-record('ManageNotebookSharesResult', {'errors' :: list() | 'undefined'}).
-type 'ManageNotebookSharesResult'() :: #'ManageNotebookSharesResult'{}.

%% struct 'SharedNoteTemplate'

-record('SharedNoteTemplate', {'noteGuid' :: string() | binary() | 'undefined',
                               'recipientThreadId' :: integer() | 'undefined',
                               'recipientContacts' :: list() | 'undefined',
                               'privilege' :: integer() | 'undefined'}).
-type 'SharedNoteTemplate'() :: #'SharedNoteTemplate'{}.

%% struct 'NotebookShareTemplate'

-record('NotebookShareTemplate', {'notebookGuid' :: string() | binary() | 'undefined',
                                  'recipientThreadId' :: integer() | 'undefined',
                                  'recipientContacts' :: list() | 'undefined',
                                  'privilege' :: integer() | 'undefined'}).
-type 'NotebookShareTemplate'() :: #'NotebookShareTemplate'{}.

%% struct 'CreateOrUpdateNotebookSharesResult'

-record('CreateOrUpdateNotebookSharesResult', {'updateSequenceNum' :: integer() | 'undefined',
                                               'matchingShares' :: list() | 'undefined'}).
-type 'CreateOrUpdateNotebookSharesResult'() :: #'CreateOrUpdateNotebookSharesResult'{}.

%% struct 'NoteShareRelationshipRestrictions'

-record('NoteShareRelationshipRestrictions', {'noSetReadNote' :: boolean() | 'undefined',
                                              'noSetModifyNote' :: boolean() | 'undefined',
                                              'noSetFullAccess' :: boolean() | 'undefined'}).
-type 'NoteShareRelationshipRestrictions'() :: #'NoteShareRelationshipRestrictions'{}.

%% struct 'NoteMemberShareRelationship'

-record('NoteMemberShareRelationship', {'displayName' :: string() | binary() | 'undefined',
                                        'recipientUserId' :: integer() | 'undefined',
                                        'privilege' :: integer() | 'undefined',
                                        'restrictions' :: 'NoteShareRelationshipRestrictions'() | 'undefined',
                                        'sharerUserId' :: integer() | 'undefined'}).
-type 'NoteMemberShareRelationship'() :: #'NoteMemberShareRelationship'{}.

%% struct 'NoteInvitationShareRelationship'

-record('NoteInvitationShareRelationship', {'displayName' :: string() | binary() | 'undefined',
                                            'recipientIdentityId' :: integer() | 'undefined',
                                            'privilege' :: integer() | 'undefined',
                                            'sharerUserId' :: integer() | 'undefined'}).
-type 'NoteInvitationShareRelationship'() :: #'NoteInvitationShareRelationship'{}.

%% struct 'NoteShareRelationships'

-record('NoteShareRelationships', {'invitations' :: list() | 'undefined',
                                   'memberships' :: list() | 'undefined',
                                   'invitationRestrictions' :: 'NoteShareRelationshipRestrictions'() | 'undefined'}).
-type 'NoteShareRelationships'() :: #'NoteShareRelationships'{}.

%% struct 'ManageNoteSharesParameters'

-record('ManageNoteSharesParameters', {'noteGuid' :: string() | binary() | 'undefined',
                                       'membershipsToUpdate' :: list() | 'undefined',
                                       'invitationsToUpdate' :: list() | 'undefined',
                                       'membershipsToUnshare' :: list() | 'undefined',
                                       'invitationsToUnshare' :: list() | 'undefined'}).
-type 'ManageNoteSharesParameters'() :: #'ManageNoteSharesParameters'{}.

%% struct 'ManageNoteSharesError'

-record('ManageNoteSharesError', {'identityID' :: integer() | 'undefined',
                                  'userID' :: integer() | 'undefined',
                                  'userException' :: 'EDAMUserException'() | 'undefined',
                                  'notFoundException' :: 'EDAMNotFoundException'() | 'undefined'}).
-type 'ManageNoteSharesError'() :: #'ManageNoteSharesError'{}.

%% struct 'ManageNoteSharesResult'

-record('ManageNoteSharesResult', {'errors' :: list() | 'undefined'}).
-type 'ManageNoteSharesResult'() :: #'ManageNoteSharesResult'{}.

-endif.
